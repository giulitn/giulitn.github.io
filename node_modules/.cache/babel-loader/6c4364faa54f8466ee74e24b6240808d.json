{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/giuliana/Desktop/Curso React/curso-react-coderhouse/src/Containers/CartContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Cart from '../Components/Cart/Cart';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { getFirestore } from '../firebase';\nimport { CartContext } from \"../Context/cartContext\";\n\nconst CartContainer = () => {\n  _s();\n\n  // eslint-disable-next-line no-unused-vars\n  const [cartProducts, setCartProducts, totalCost] = useContext(CartContext);\n  const [orderId, setOrderId] = useState();\n\n  async function createOrder(buyer) {\n    const db = getFirestore();\n    const orders = db.collection('orders');\n    const newOrder = {\n      buyer,\n      cartProducts,\n      date: firebase.firestore.FieldValue.serverTimestamp(),\n      state: \"created\",\n      total: totalCost()\n    };\n\n    try {\n      const {\n        id\n      } = await orders.add(newOrder);\n      setOrderId(id);\n    } catch (err) {\n      console.log('Error');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Cart, {\n      createOrder: createOrder,\n      orderId: orderId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContainer, \"cGCs1944BroudJ8qhbdmlzoPZt0=\");\n\n_c = CartContainer;\nexport default CartContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContainer\");","map":{"version":3,"sources":["/Users/giuliana/Desktop/Curso React/curso-react-coderhouse/src/Containers/CartContainer.js"],"names":["React","useContext","useState","Cart","firebase","getFirestore","CartContext","CartContainer","cartProducts","setCartProducts","totalCost","orderId","setOrderId","createOrder","buyer","db","orders","collection","newOrder","date","firestore","FieldValue","serverTimestamp","state","total","id","add","err","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,EAAgCC,SAAhC,IAA6CT,UAAU,CAACK,WAAD,CAA7D;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;;AAEA,iBAAeW,WAAf,CAA2BC,KAA3B,EAAkC;AAC9B,UAAMC,EAAE,GAAGV,YAAY,EAAvB;AACA,UAAMW,MAAM,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAf;AACA,UAAMC,QAAQ,GAAG;AACbJ,MAAAA,KADa;AAEbN,MAAAA,YAFa;AAGbW,MAAAA,IAAI,EAAEf,QAAQ,CAACgB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAHO;AAIbC,MAAAA,KAAK,EAAE,SAJM;AAKbC,MAAAA,KAAK,EAAEd,SAAS;AALH,KAAjB;;AAOA,QAAI;AACA,YAAM;AAAEe,QAAAA;AAAF,UAAS,MAAMT,MAAM,CAACU,GAAP,CAAWR,QAAX,CAArB;AACAN,MAAAA,UAAU,CAACa,EAAD,CAAV;AACH,KAHD,CAGE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ;;AACD,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEhB,WAAnB;AAAgC,MAAA,OAAO,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3BD;;GAAMJ,a;;KAAAA,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Cart from '../Components/Cart/Cart'\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { getFirestore } from '../firebase'\nimport { CartContext } from \"../Context/cartContext\";\n\nconst CartContainer = () => {\n    // eslint-disable-next-line no-unused-vars\n    const [cartProducts, setCartProducts, totalCost] = useContext(CartContext);\n    const [orderId, setOrderId] = useState()\n\n    async function createOrder(buyer) {\n        const db = getFirestore()\n        const orders = db.collection('orders')\n        const newOrder = {\n            buyer,\n            cartProducts,\n            date: firebase.firestore.FieldValue.serverTimestamp(),\n            state: \"created\",\n            total: totalCost(),\n        }\n        try {\n            const { id } = await orders.add(newOrder)\n            setOrderId(id)\n        } catch (err) {\n            console.log('Error')\n        }\n    }\n    return (\n        <div>\n            <Cart createOrder={createOrder} orderId={orderId} />\n        </div>\n    );\n};\n\nexport default CartContainer;"]},"metadata":{},"sourceType":"module"}